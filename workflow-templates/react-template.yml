name: React typescript CI/CD template

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:  

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps: 
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install
    
    - name: Run the tests and generate coverage report
      run: npm test

    - name: Build
      run: npm run build

    # Building and pushing to docker hub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: dockerHubUser/name-of-image
        tags: |
              type=ref,event=branch
              type=sha
              type=sha,prefix={{branch}}-
              type=sha,format=long
              type=sha,format=long,prefix={{branch}}-
              type=raw,value=latest

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}